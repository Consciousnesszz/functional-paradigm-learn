/**
 * 纯函数的好处
 *
 * 纯函数是这样一种函数，即相同的输入，永远会得到相同的输出，而且没有任何可观察的副作用。
 */

// slice 和 splice ====> slice 不会改变原函数，而 splice 则会在原函数上动手，打破了纯的定义
var xs = [1, 2, 3, 4, 5];

// 纯的
xs.slice(0, 3);
//=> [1,2,3]

xs.slice(0, 3);
//=> [1,2,3]

xs.slice(0, 3);
//=> [1,2,3]


// 不纯的
xs.splice(0, 3);
//=> [1,2,3]

xs.splice(0, 3);
//=> [4,5]

xs.splice(0, 3);
//=> []

/**
 * 副作用的定义：
 * 只要是跟函数外部环境发生的交互就都是副作用。函数式编程的哲学就是假定副作用是造成不正当行为的主要原因。
 *
 * 纯函数的优点
 * 1. 可缓存性
 * 2. 可移植性／自文档化
 * 3. 可测试性
 * 4. 合理性（引用透明性）
 * 5. 并行代码
 */
